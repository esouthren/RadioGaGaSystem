/*
 * Author : Eilidh Southren - 1513195
 *
 * This creates a GUI window to Add or Change a Presenter.
 *
 */

package radioshowGUI;

import java.awt.Color;
import radioshowModel.Presenter;
import radioshowModel.Schedule;
import radioshowModel.Show;
import java.util.ArrayList;
import javax.swing.JOptionPane;

public class AddPresenter extends javax.swing.JDialog {

    private Schedule schedule;
    private Show thisShow;
    
    public AddPresenter(java.awt.Frame parent, boolean modal, Schedule sc, Show thisShow) {
        super(parent, modal);    
       
        this.schedule = sc;
        this.thisShow = thisShow;
        initComponents();
        
        // Set comboBox to current Show
        comboBoxShows.setSelectedItem(thisShow);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        buttonGroup4 = new javax.swing.ButtonGroup();
        buttonGroup5 = new javax.swing.ButtonGroup();
        buttonGroup6 = new javax.swing.ButtonGroup();
        buttonGroup7 = new javax.swing.ButtonGroup();
        buttonGroup8 = new javax.swing.ButtonGroup();
        buttonGroup9 = new javax.swing.ButtonGroup();
        buttonGroup10 = new javax.swing.ButtonGroup();
        buttonGroup11 = new javax.swing.ButtonGroup();
        buttonGroup12 = new javax.swing.ButtonGroup();
        buttonGroup13 = new javax.swing.ButtonGroup();
        buttonGroup14 = new javax.swing.ButtonGroup();
        buttonGroup15 = new javax.swing.ButtonGroup();
        buttonGroup16 = new javax.swing.ButtonGroup();
        buttonGroup17 = new javax.swing.ButtonGroup();
        buttonGroup18 = new javax.swing.ButtonGroup();
        jFrame1 = new javax.swing.JFrame();
        jFormattedTextField1 = new javax.swing.JFormattedTextField();
        Show[] showList = schedule.getShows();
        comboBoxShows = new javax.swing.JComboBox(showList);
        labelLastName = new javax.swing.JLabel();
        labelFee = new javax.swing.JLabel();
        labelFirstName = new javax.swing.JLabel();
        textBoxLastName = new javax.swing.JTextField();
        textBoxFirstName = new javax.swing.JTextField();
        textBoxFee = new javax.swing.JTextField();
        ArrayList<Presenter> pList = schedule.getPresenters();
        Presenter[] ppList = pList.toArray(new Presenter[pList.size()]);
        comboBoxCurrentPresenters = new javax.swing.JComboBox(ppList);
        buttonOk = new javax.swing.JButton();
        buttonCancel = new javax.swing.JButton();
        toggleNewPresenter = new javax.swing.JRadioButton();
        toggleCurrentPresenters = new javax.swing.JRadioButton();
        toggleAddToSchedule = new javax.swing.JRadioButton();
        toggleAddToShow = new javax.swing.JRadioButton();

        javax.swing.GroupLayout jFrame1Layout = new javax.swing.GroupLayout(jFrame1.getContentPane());
        jFrame1.getContentPane().setLayout(jFrame1Layout);
        jFrame1Layout.setHorizontalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame1Layout.setVerticalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        jFormattedTextField1.setText("jFormattedTextField1");

        setTitle("Select or Create New Presenter");

        comboBoxShows.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxShowsActionPerformed(evt);
            }
        });

        labelLastName.setText("Last Name");

        labelFee.setText("Fee");

        labelFirstName.setText("First Name");

        textBoxLastName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textBoxLastNameActionPerformed(evt);
            }
        });

        textBoxFirstName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textBoxFirstNameActionPerformed(evt);
            }
        });

        textBoxFee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textBoxFeeActionPerformed(evt);
            }
        });

        comboBoxCurrentPresenters.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxCurrentPresentersActionPerformed(evt);
            }
        });

        buttonOk.setText("OK");
        buttonOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonOkActionPerformed(evt);
            }
        });

        buttonCancel.setText("Cancel");
        buttonCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCancelActionPerformed(evt);
            }
        });

        toggleNewPresenter.setText("Add New Presenter");
        deactivateNewPresenterFields();
        toggleNewPresenter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toggleNewPresenterActionPerformed(evt);
            }
        });

        toggleCurrentPresenters.setText("Select From Current Presenters");
        toggleCurrentPresenters.setSelected(true);
        toggleCurrentPresenters.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toggleCurrentPresentersActionPerformed(evt);
            }
        });

        toggleAddToSchedule.setText("Add Presenter To Schedule Only");
        toggleAddToSchedule.setEnabled(false);
        toggleAddToSchedule.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toggleAddToScheduleActionPerformed(evt);
            }
        });

        toggleAddToShow.setText("Set Presenter To Selected Show");
        toggleAddToShow.setSelected(true);
        toggleAddToShow.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toggleAddToShowActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(labelLastName)
                                    .addComponent(labelFirstName)
                                    .addComponent(labelFee))
                                .addGap(29, 29, 29))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(toggleNewPresenter)
                                    .addComponent(toggleCurrentPresenters))
                                .addGap(23, 23, 23)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(textBoxFirstName)
                                .addComponent(textBoxLastName)
                                .addComponent(textBoxFee, javax.swing.GroupLayout.PREFERRED_SIZE, 396, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(comboBoxCurrentPresenters, javax.swing.GroupLayout.PREFERRED_SIZE, 396, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(toggleAddToSchedule)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(buttonOk)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(buttonCancel))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(toggleAddToShow)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(comboBoxShows, javax.swing.GroupLayout.PREFERRED_SIZE, 396, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(47, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboBoxCurrentPresenters, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(toggleCurrentPresenters))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(toggleNewPresenter)
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelFirstName)
                    .addComponent(textBoxFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelLastName)
                    .addComponent(textBoxLastName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelFee)
                    .addComponent(textBoxFee, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(toggleAddToSchedule)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(toggleAddToShow)
                    .addComponent(comboBoxShows, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonOk)
                    .addComponent(buttonCancel))
                .addGap(40, 40, 40))
        );
    }// </editor-fold>//GEN-END:initComponents
    
    // Change GUI when 'seclect from current presenters' is selected
    private void deactivateNewPresenterFields() {
        textBoxFirstName.setEnabled(false);
        textBoxLastName.setEnabled(false);
        textBoxFee.setEnabled(false);
        labelFirstName.setForeground(Color.gray);
        labelLastName.setForeground(Color.gray);
        labelFee.setForeground(Color.gray);
    }
    
   // Change GUI when 'create new presenter' is selected
    private void activateNewPresenterFields() {
        textBoxFirstName.setEnabled(true);
        textBoxLastName.setEnabled(true);
        textBoxFee.setEnabled(true);
        labelFirstName.setForeground(Color.black);
        labelLastName.setForeground(Color.black);
        labelFee.setForeground(Color.black);
    }

    private void comboBoxCurrentPresentersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxCurrentPresentersActionPerformed

    }//GEN-LAST:event_comboBoxCurrentPresentersActionPerformed

    private void textBoxFirstNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textBoxFirstNameActionPerformed
     
    }//GEN-LAST:event_textBoxFirstNameActionPerformed

    // Close Window if 'cancel' is selected
    private void buttonCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCancelActionPerformed
        this.setVisible(false);
    }//GEN-LAST:event_buttonCancelActionPerformed

    // Actions for when 'OK' is clicked
    private void buttonOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonOkActionPerformed
  
        // retrieve comboBox data from form
        Show selectedShow = (Show)comboBoxShows.getSelectedItem();
        Presenter selectedPresenter = (Presenter)comboBoxCurrentPresenters.getSelectedItem();
        
        // Creating a new presenter
        if (toggleNewPresenter.isSelected()) {
          
            String fName = textBoxFirstName.getText();
            String lName = textBoxLastName.getText();
            int fee = Integer.parseInt(textBoxFee.getText());
            // Input check: Fields must contain data
            if ((fName.equals("")) || (lName.equals("")) || textBoxFee.getText().equals("")) {
                JOptionPane.showMessageDialog(this, "Error: All fields must have a value.");
            }
            else if (fee < 0) {
                JOptionPane.showMessageDialog(this, "Error: Fee Must be a positive integer");
            }
            else {
                try {

                
                Presenter newPresenter = new Presenter(fName, lName, fee);

                // Either add to schedule, or add to schedule AND show
                if (toggleAddToSchedule.isSelected()) {
                    schedule.addPresenter(newPresenter);
                }
                if (toggleAddToShow.isSelected()) {
                    schedule.addPresenter(newPresenter);
                    selectedShow.setPresenter(newPresenter);
                }
                this.setVisible(false);
                // Error catch for non-numerical input
                } catch (NumberFormatException e) {
                    JOptionPane.showMessageDialog(this, "Error: Fee must be an integer value.");
                } 
            }
        }
        // Or add pre-existing presenter to Show
        else {         
            selectedShow.setPresenter(selectedPresenter);
        }
    // Close GUI Window              
        
    }//GEN-LAST:event_buttonOkActionPerformed

    private void textBoxLastNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textBoxLastNameActionPerformed
// TODO add your handling code here:2
    }//GEN-LAST:event_textBoxLastNameActionPerformed

    private void textBoxFeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textBoxFeeActionPerformed
       // TODO add your handling code here:
    }//GEN-LAST:event_textBoxFeeActionPerformed

    private void toggleNewPresenterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toggleNewPresenterActionPerformed
        activateNewPresenterFields();
        toggleAddToSchedule.setEnabled(true);
        toggleCurrentPresenters.setSelected(false);
        comboBoxCurrentPresenters.setEnabled(false);
    }//GEN-LAST:event_toggleNewPresenterActionPerformed

    private void toggleCurrentPresentersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toggleCurrentPresentersActionPerformed
        deactivateNewPresenterFields();
        toggleNewPresenter.setSelected(false);
        toggleAddToSchedule.setEnabled(false);
        comboBoxCurrentPresenters.setEnabled(true);
        if (toggleAddToSchedule.isSelected()) {
            toggleAddToShow.setSelected(true);
            toggleAddToShow.setEnabled(true);
            toggleAddToSchedule.setSelected(false);
            toggleAddToSchedule.setEnabled(false);
            comboBoxShows.setEnabled(true);
        }
    }//GEN-LAST:event_toggleCurrentPresentersActionPerformed

    private void toggleAddToShowActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toggleAddToShowActionPerformed
        toggleAddToSchedule.setSelected(false);
        comboBoxShows.setEnabled(true);
    }//GEN-LAST:event_toggleAddToShowActionPerformed

    private void comboBoxShowsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxShowsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboBoxShowsActionPerformed

    private void toggleAddToScheduleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toggleAddToScheduleActionPerformed
        toggleAddToShow.setSelected(false);
        comboBoxShows.setEnabled(false);
    }//GEN-LAST:event_toggleAddToScheduleActionPerformed
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonCancel;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup10;
    private javax.swing.ButtonGroup buttonGroup11;
    private javax.swing.ButtonGroup buttonGroup12;
    private javax.swing.ButtonGroup buttonGroup13;
    private javax.swing.ButtonGroup buttonGroup14;
    private javax.swing.ButtonGroup buttonGroup15;
    private javax.swing.ButtonGroup buttonGroup16;
    private javax.swing.ButtonGroup buttonGroup17;
    private javax.swing.ButtonGroup buttonGroup18;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.ButtonGroup buttonGroup4;
    private javax.swing.ButtonGroup buttonGroup5;
    private javax.swing.ButtonGroup buttonGroup6;
    private javax.swing.ButtonGroup buttonGroup7;
    private javax.swing.ButtonGroup buttonGroup8;
    private javax.swing.ButtonGroup buttonGroup9;
    private javax.swing.JButton buttonOk;
    private javax.swing.JComboBox<String> comboBoxCurrentPresenters;
    private javax.swing.JComboBox<String> comboBoxShows;
    private javax.swing.JFormattedTextField jFormattedTextField1;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JLabel labelFee;
    private javax.swing.JLabel labelFirstName;
    private javax.swing.JLabel labelLastName;
    private javax.swing.JTextField textBoxFee;
    private javax.swing.JTextField textBoxFirstName;
    private javax.swing.JTextField textBoxLastName;
    private javax.swing.JRadioButton toggleAddToSchedule;
    private javax.swing.JRadioButton toggleAddToShow;
    private javax.swing.JRadioButton toggleCurrentPresenters;
    private javax.swing.JRadioButton toggleNewPresenter;
    // End of variables declaration//GEN-END:variables
}
